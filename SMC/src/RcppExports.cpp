// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// APF
Rcpp::List APF(arma::colvec obs, int num_particles, arma::vec param);
RcppExport SEXP _SMC_APF(SEXP obsSEXP, SEXP num_particlesSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type obs(obsSEXP);
    Rcpp::traits::input_parameter< int >::type num_particles(num_particlesSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(APF(obs, num_particles, param));
    return rcpp_result_gen;
END_RCPP
}
// BSF
List BSF(arma::vec obs, int N, arma::rowvec param);
RcppExport SEXP _SMC_BSF(SEXP obsSEXP, SEXP NSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type obs(obsSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(BSF(obs, N, param));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SMC_APF", (DL_FUNC) &_SMC_APF, 3},
    {"_SMC_BSF", (DL_FUNC) &_SMC_BSF, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_SMC(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
